import{a as e,b as i}from"./chunk-GVU63CGI.mjs";import l from"fs";import g from"path";var c=(r,t)=>{let[o,n]=r.split("=");return t==="YOUR_FIELD_VALUE"?`${o}="YOUR_${o}_VALUE"`:""},a=(r,t)=>r.split(`${e}${i}`).map(n=>{if(n.trim()===""||n.startsWith("#"))return n;if(n.includes("#")){let[s,f]=n.split(/#+/);return`${c(s,t)}   #${f}`}return`${c(n,t)}`}).join(`${e}${i}`),p=(r,t,o)=>{try{let n=g.join(process.cwd(),r!=null?r:".env");console.log(`reading sample env(${r})`);let s=l.readFileSync(n,{encoding:"utf8",flag:"r"});return a(s,o)}catch(n){return console.log("No .env file Found!"),!1}},u=(r,t)=>{let o=g.join(process.cwd(),t!=null?t:".env");try{l.writeFileSync(o,r,{encoding:"utf8",flag:"w"})}catch(n){console.log(`Couldnot write ${t} file.`)}},v=({name:r,sample:t,values:o,dryRun:n})=>{let s=p(r,t,o);s&&(n?console.log(s):u(s,t),!n&&console.log("Sample ENV file written successfully!"))},d=({name:r,sample:t,values:o,silent:n,dryRun:s})=>{n||console.log("prompting here:"),v({name:r,sample:t,values:o,dryRun:s})};export{d as a};
