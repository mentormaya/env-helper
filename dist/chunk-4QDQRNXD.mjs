import{a as i,b as l}from"./chunk-GVU63CGI.mjs";import{a as f}from"./chunk-VZATVPYO.mjs";import g from"fs";import u from"path";var p=f("inquirer"),a=(t,e)=>{let[o,n]=t.split("=");return e==="YOUR_FIELD_VALUE"?`${o}="YOUR_${o}_VALUE"`:""},m=(t,e)=>t.split(`${i}${l}`).map(n=>{if(n.trim()===""||n.startsWith("#"))return n;if(n.includes("#")){let[r,s]=n.split(/#+/);return`${a(r,e)}   #${s}`}return`${a(n,e)}`}).join(`${i}${l}`),v=(t,e,o)=>{try{let n=u.join(process.cwd(),t!=null?t:".env");console.log(`reading sample env(${t})`);let r=g.readFileSync(n,{encoding:"utf8",flag:"r"});return m(r,o)}catch(n){return console.log("No .env file Found!"),!1}},d=(t,e)=>{let o=u.join(process.cwd(),e!=null?e:".env");try{g.writeFileSync(o,t,{encoding:"utf8",flag:"w"})}catch(n){console.log(`Couldnot write ${e} file.`)}},c=({name:t,sample:e,values:o,dryRun:n})=>{let r=v(t,e,o);r&&(n?console.log(r):d(r,e),!n&&console.log("Sample ENV file written successfully!"))},$=({name:t,sample:e,values:o,silent:n,dryRun:r})=>{n?c({name:t,sample:e,values:o,dryRun:r}):p.prompt([{type:"input",name:"name",message:"What is the name of your env file?",default:".env"},{type:"input",name:"sample",message:"What do you want your sample env file name to be?",default:".sample.env"},{type:"input",name:"values",message:"Placeholder format for your values?",default:"YOUR_FIELD_VALUE"},{type:"confirm",name:"dryRun",message:"Want the output in the console instead of generating a file?",default:!1}]).then(s=>{c({name:t,sample:e,values:o,dryRun:r})}).catch(s=>{s.isTtyError?(console.log("Couldnot render prompt under this environment!"),console.log(s)):console.log(`Something went Wrong: ${s}`)})};export{$ as a};
