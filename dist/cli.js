#!/usr/bin/env node
"use strict";var b=Object.create;var u=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var L=(e,n,o,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of j(n))!_.call(e,r)&&r!==o&&u(e,r,{get:()=>n[r],enumerable:!(t=$(n,r))||t.enumerable});return e};var f=(e,n,o)=>(o=e!=null?b(w(e)):{},L(n||!e||!e.__esModule?u(o,"default",{value:e,enumerable:!0}):o,e));var E=require("commander");var s="0.1.0";var p=f(require("fs")),m=f(require("path"));var a="\r",l=`
`;var R=require("inquirer"),d=(e,n)=>{let[o,t]=e.split("=");return n==="YOUR_FIELD_VALUE"?`${o}="YOUR_${o}_VALUE"`:""},A=(e,n)=>e.split(`${a}${l}`).map(t=>{if(t.trim()===""||t.startsWith("#"))return t;if(t.includes("#")){let[r,i]=t.split(/#+/);return`${d(r,n)}   #${i}`}return`${d(t,n)}`}).join(`${a}${l}`),S=(e,n,o)=>{try{let t=m.default.join(process.cwd(),e!=null?e:".env");console.log(`reading sample env(${e})`);let r=p.default.readFileSync(t,{encoding:"utf8",flag:"r"});return A(r,o)}catch(t){return console.log("No .env file Found!"),!1}},U=(e,n)=>{let o=m.default.join(process.cwd(),n!=null?n:".env");try{p.default.writeFileSync(o,e,{encoding:"utf8",flag:"w"})}catch(t){console.log(`Couldnot write ${n} file.`)}},v=({name:e,sample:n,values:o,dryRun:t})=>{let r=S(e,n,o);r&&(t?console.log(r):U(r,n),!t&&console.log("Sample ENV file written successfully!"))},h=({name:e,sample:n,values:o,silent:t,dryRun:r})=>{t?v({name:e,sample:n,values:o,dryRun:r}):R.prompt([{type:"input",name:"name",message:"What is the name of your env file?",default:".env"},{type:"input",name:"sample",message:"What do you want your sample env file name to be?",default:".sample.env"},{type:"input",name:"values",message:"Placeholder format for your values?",default:"YOUR_FIELD_VALUE"},{type:"confirm",name:"dryRun",message:"Want the output in the console instead of generating a file?",default:!1}]).then(i=>{v({name:e,sample:n,values:o,dryRun:r})}).catch(i=>{i.isTtyError?(console.log("Couldnot render prompt under this environment!"),console.log(i)):console.log(`Something went Wrong: ${i}`)})};var I=require("figlet"),C=`
${I.textSync(`Helper v${s}`,{font:"Standard",horizontalLayout:"fitted",verticalLayout:"fitted"})}
A CLI tool for generating a sample env(.env.sample) file from a .env file.
By: Ajay Singh [@mentormaya] <admin@ajaysingh.com.np>
`,y=C;var c=new E.Command;c.name("helper").description(y).version(s);c.command("gen-env").description("Generate Sample ENV(.env.sample) from .env file.").option("-s, --silent","runs without any interaction.",!1).option("-n, --name <name>","Name of env file",".env").option("-N, --sample <sample_name>","Name for the sample env file",".env.sample").option("-v, --values <placeholder>","Default Placeholder Value","YOUR_FIELD_VALUE").option("-d, --dry-run","Output to the console only",!1).action(h);c.parse();
