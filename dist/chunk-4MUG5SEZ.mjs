import{a as i,b as l,c as a}from"./chunk-LEYJQD6P.mjs";import p from"fs";import u from"path";import d from"inquirer";var c=(t,e)=>{let[o,n]=t.split("=");return e===a[0]?`${o}="YOUR_${o.toUpperCase()}_VALUE"`:""},y=(t,e)=>{let o=t.split(`${i}${l}`);return console.log(o),o.map(n=>{if(n.trim()===""||n.startsWith("#"))return n;if(n.includes("#")){let[s,r]=n.split(/#+/);return`${c(s,e)}   #${r}`}return`${c(n,e)}`}).join(`${i}${l}`)},h=(t,e,o)=>{try{let n=u.join(process.cwd(),t!=null?t:".env");console.log(`reading sample env(${t})`);let s=p.readFileSync(n,{encoding:"utf8",flag:"r"});return y(s,o)}catch(n){return console.log("No .env file Found!"),!1}},E=(t,e)=>{let o=u.join(process.cwd(),e!=null?e:".env");try{p.writeFileSync(o,t,{encoding:"utf8",flag:"w"})}catch(n){console.log(`Couldnot write ${e} file.`)}},g=({name:t,sample:e,values:o,dryRun:n})=>{let s=h(t,e,o);s&&(n?console.log(s):E(s,e),!n&&console.log("Sample ENV file written successfully!"))},R=({name:t,sample:e,values:o,silent:n,dryRun:s})=>{n?g({name:t,sample:e,values:o,dryRun:s}):d.prompt([{type:"input",name:"name",message:"What is the name of your env file?",default:".env"},{type:"input",name:"sample",message:"What do you want your sample env file name to be?",default:".sample.env"},{type:"list",name:"values",message:"Placeholder format for your values?",choices:a},{type:"confirm",name:"dryRun",message:"Want the output in the console instead of generating a file?",default:!1}]).then(({name:r,sample:f,values:m,dryRun:v})=>{g({name:r,sample:f,values:m,dryRun:v})}).catch(r=>{r.isTtyError?(console.log("Couldnot render prompt under this environment!"),console.log(r)):console.log(`Something went Wrong: ${r}`)})};export{R as a};
